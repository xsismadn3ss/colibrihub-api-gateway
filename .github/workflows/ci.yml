name: Build and Push Image (Spring Boot Buildpacks)

on:
  push:
    branches: [ "main", "master" ]
    tags: [ "v*" ]
  pull_request:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: colibrihub-auth-service
  JAVA_VERSION: "21"
  # Despliegue
  CONTAINER_NAME: spring-api-gateway
  PORT: ${{ secrets.PORT }}
  CORS_ALLOWED_ORIGINS: ${{ secrets.CORS_ALLOWED_ORIGINS }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  USERS_MODULE_URL: ${{ secrets.USERS_MODULE_URL }}
  FACTURAS_MODULES_URL: ${{ secrets.FACTURAS_MODULES_URL }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.tag.outputs.tag }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
          cache: gradle

      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Run tests
        run: ./gradlew test --no-daemon

      - name: Compute image tag
        id: tag
        shell: bash
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            echo "tag=${GITHUB_REF_NAME}" >> "$GITHUB_OUTPUT"
          elif [[ "${GITHUB_REF_NAME}" =~ ^(main|master)$ ]]; then
            echo "tag=latest" >> "$GITHUB_OUTPUT"
          else
            echo "tag=${GITHUB_SHA}" >> "$GITHUB_OUTPUT"
          fi

      - name: Log in to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # PRs: construye localmente sin publicar
      - name: Build image (no publish on PR)
        if: github.event_name == 'pull_request'
        env:
          BP_JVM_VERSION: "21"
        run: |
          ./gradlew --no-daemon \
            -PimageName=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }} \
            bootBuildImage

      # Pushes/tags: construye y publica a GHCR
      - name: Build and publish image
        if: github.event_name != 'pull_request'
        env:
          BP_JVM_VERSION: "21"
        run: |
          ./gradlew --no-daemon \
            -PimageName=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }} \
            bootBuildImage --publishImage
